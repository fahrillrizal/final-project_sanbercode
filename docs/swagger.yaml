basePath: /api
definitions:
  controllers.CollaboratorInput:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  controllers.ProjectInput:
    properties:
      description:
        type: string
      name:
        type: string
      owner_id:
        type: integer
    required:
    - name
    - owner_id
    type: object
  controllers.taskInput:
    properties:
      assigned_to:
        items:
          type: integer
        type: array
      deadline:
        type: string
      description:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  models.Project:
    properties:
      collaborators:
        items:
          $ref: '#/definitions/models.ProjectCollaborator'
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      updated_at:
        type: string
    type: object
  models.ProjectCollaborator:
    properties:
      created_at:
        type: string
      id:
        type: integer
      project_id:
        type: integer
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.Task:
    properties:
      assigned_to:
        items:
          $ref: '#/definitions/models.UserResponse'
        type: array
      deadline:
        type: string
      description:
        type: string
      id:
        type: integer
      project:
        $ref: '#/definitions/models.Project'
      project_id:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  models.UserAuth:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    type: object
  models.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API untuk manajemen proyek dan tugas
  title: Project Management API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            type: string
        "400":
          description: Bad Request - User not found or invalid password
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: User login
      tags:
      - Auth
  /api/projects:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all projects
      tags:
      - Projects
    post:
      consumes:
      - application/json
      description: Add a new project with a name, description, and owner
      parameters:
      - description: Project Input
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/controllers.ProjectInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Add a new project
      tags:
      - Projects
  /api/projects/{project_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a project
      tags:
      - Projects
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get project by ID
      tags:
      - Projects
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Project Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.ProjectInput'
      produces:
      - application/json
      responses:
        "200":
          description: Project Updated
          schema:
            $ref: '#/definitions/models.Project'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Edit a project
      tags:
      - Projects
  /api/projects/{project_id}/collaborators:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Collaborator Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.CollaboratorInput'
      produces:
      - application/json
      responses:
        "200":
          description: Collaborator removed successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Remove a collaborator from a project
      tags:
      - Projects
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Collaborator Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.CollaboratorInput'
      produces:
      - application/json
      responses:
        "200":
          description: Collaborator added successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add a collaborator to a project
      tags:
      - Projects
  /api/projects/{project_id}/tasks:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Project Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get tasks by project ID
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Task Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.taskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Task created successfully
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Add a new task to a project
      tags:
      - Tasks
  /api/projects/{project_id}/tasks/{task_id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: Task Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controllers.taskInput'
      produces:
      - application/json
      responses:
        "200":
          description: Task updated successfully
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Task Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update an existing task
      tags:
      - Tasks
  /api/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Registration Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Register new user
      tags:
      - Auth
  /api/tasks:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all tasks assigned to the user
      tags:
      - Tasks
  /api/tasks/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Task deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Task Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a task by ID
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Task Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a task by its ID
      tags:
      - Tasks
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
